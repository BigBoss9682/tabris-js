{
  "type": "Row",
  "category": "widget",
  "description": "A composite with the `layout` property initialized with a `RowLayout`. All children are automatically arranged in one horizontal row, starting from the left.",
  "extends": "Composite",
  "constructor": {
    "access": "public",
    "parameters": [
      {
        "name": "properties",
        "type": {
          "interface": "Properties",
          "generics": ["Row"]
        },
        "optional": true,
        "description": "Sets all key-value pairs in the properties object as widget properties."
      }
    ]
  },
  "properties": {
    "layout": {
      "type": "RowLayout",
      "default": "RowLayout",
      "const": true,
      "description": "The row layout manager responsible for interpreting the [`layoutData`](./Widget.md#layoutdata) of the child widgets of this Composite."
    },
    "spacing": {
      "type": "number",
      "default": 0,
      "const": true,
      "description": "The space between the children in device independent pixel."
    },
    "alignment": {
      "type": {"union": ["'top'", "'centerY'", "'stretchY'", "'bottom'", "'baseline'"]},
      "const": true,
      "default": "'top'",
      "description": "Determines the vertical placement of the children.\n\n For `stretchY` to work correctly the `Row` needs to be given a height either by setting `height` or by setting `top` and `bottom`.\n\nIf `baseline` is set the first widget in the row will determine where that baseline is. By setting `top`, `bottom` or `centerY` on that widget the baseline can be shifted."
    }
  },
  "links": [
    {
      "title": "Creating a simple `Row`",
      "snippet": "row.jsx"
    },
    {
      "title": "Creating a `Row` with vertical alignment",
      "snippet": "row-alignment.jsx"
    },
    {
      "title": "Creating a `Row` with horizontal alignment",
      "snippet": "row-halign.jsx"
    }
  ]
}
