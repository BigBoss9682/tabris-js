{
  "type": "SizeMeasurement",
  "category": "service",
  "object": "sizeMeasurement",
  "extends": "NativeObject",
  "description": "Allows to measure Text.",
  "constructor": {
    "access": "private",
    "parameters": []
  },
  "methods": {
    "measureTexts": {
      "parameters": [
        {
          "name": "configs",
          "type": {
            "interface": "Array",
            "generics": [
              {
                "map": {
                  "text": {
                    "type": "string",
                    "description": "The text to measure."
                  },
                  "font": {
                    "type": "FontValue",
                    "description": "The font to use when measuring the text. Requires to provide at least the font size."
                  },
                  "maxWidth": {
                    "type": "number",
                    "description": "The maximum width after which to break a text string to a new line.",
                    "optional": true
                  },
                  "markupEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the texts html markup should be processed before measuring. Supports the same tags as `TextView`.",
                    "optional": true
                  }
                }
              }
            ]
          },
          "description": "The text configurations to measure. A text configuration has to provide at least a `text` and `fontSize` property."
        }
      ],
      "returns": {
        "interface": "Promise",
        "generics": [
          {
            "map": {
              "width": {
                "type": "number",
                "description": "The width of the measure text"
              },
              "height": {
                "type": "number",
                "description": "The height of the measured text"
              }
            }
          }
        ]
      },
      "description": "Measures the given text. The method returns a `Promise` which resolves to an array of `{width: number, height: number}`.",
      "provisional": true
    }
  },
  "links": [
    {
      "title": "How to measure text with various parameters",
      "snippet": "sizemeasurement.jsx"
    }
  ]
}
