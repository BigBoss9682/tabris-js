{
  "type": "Console",
  "category": "service",
  "description": "The console object provides access to the [debugging console](../debug.md).",
  "namespace": "global",
  "object": "console",
  "constructor": {
    "access": "private"
  },
  "methods": {
    "assert": [
      {
        "description": "Outputs an error message to the console if the first argument is false.",
        "parameters": [
          {
            "description": "Any boolean expression. If the assertion is false, the error message is written to the console.",
            "name": "expression",
            "type": "boolean"
          },
          {
            "description": "A list of JavaScript values to output.",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "count": [
      {
        "description": "Logs the number of times that this particular call to count() has been called.",
        "parameters": [
          {
            "description": "If supplied, count() outputs the number of times it has been called with that label.",
            "name": "label",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "countReset": [
      {
        "description": "Resets the counter.",
        "parameters": [
          {
            "description": "If label supplied, this function resets the count associated with that particular label.",
            "name": "label",
            "type": "string",
            "optional": true
          }
        ]
      }
    ],
    "dirxml": [
      {
        "description": "XML tree representation of a given object, if available. Supported types include all widgets `localStorage` and `secureStorage`. \n\n*The output is NOT JSX, it is a human-readable summary that displays XML-conforming string representations of some select property values.",
        "parameters": [
          {
            "description": "A JavaScript object",
            "name": "object",
            "type": "any"
          }
        ]
      }
    ],
    "group": [
      {
        "description": "Creates a new inline group in the console output. This indents following console messages by an additional spaces, until console.groupEnd() is called.",
        "parameters": [
          {
            "description": "A list of JavaScript values to output.",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "groupEnd": [
      {
        "description": "Exits the current inline group in the console.",
        "parameters": []
      },
      {
        "description": "Exits the current inline group in the console.",
        "parameters": []
      }
    ],
    "log": [
      {
        "description": "Outputs a message to the console.",
        "parameters": [
          {
            "description": "A list of JavaScript values to output",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "warn": [
      {
        "description": "Outputs a warning message to the console.",
        "parameters": [
          {
            "description": "A list of JavaScript values to output.",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "debug": [
      {
        "description": "Outputs a debug message to the console.",
        "parameters": [
          {
            "description": "A list of JavaScript values to output.",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "info": [
      {
        "description": "Outputs an info message to the console.",
        "parameters": [
          {
            "description": "A list of JavaScript values to output.",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "error": [
      {
        "description": "Outputs an error message to the console.",
        "parameters": [
          {
            "description": "A list of JavaScript values to output.",
            "name": "...values",
            "type": {"interface": "Array", "generics": ["any"]}
          }
        ]
      }
    ],
    "trace": {
      "description": "Prints a stack trace in a platform-independent format. Framework internals are omitted.\n\nSource maps are supported when side-loading code via the tabris CLI."
    }
  },
  "links": [
    {
      "title": "Logging to the `console` with various log levels",
      "snippet": "console.jsx"
    }
  ]
}
